/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  ERC20Facet,
  ERC20FacetInterface,
} from "../../../contracts/ERC20/ERC20Facet";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "burn",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "name_",
        type: "string",
      },
      {
        internalType: "string",
        name: "symbol_",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "maxSupply_",
        type: "uint256",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "maxSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "mint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x6080604052348015600f57600080fd5b50611c558061001f6000396000f3fe608060405234801561001057600080fd5b50600436106100cf5760003560e01c806342966c681161008c578063a9059cbb11610066578063a9059cbb14610214578063b119490e14610244578063d5abeb0114610260578063dd62ed3e1461027e576100cf565b806342966c68146101aa57806370a08231146101c657806395d89b41146101f6576100cf565b806306fdde03146100d4578063095ea7b3146100f257806318160ddd1461012257806323b872dd14610140578063313ce5671461017057806340c10f191461018e575b600080fd5b6100dc6102ae565b6040516100e99190610fc6565b60405180910390f35b61010c60048036038101906101079190611090565b610349565b60405161011991906110eb565b60405180910390f35b61012a61035e565b6040516101379190611115565b60405180910390f35b61015a60048036038101906101559190611130565b61036d565b60405161016791906110eb565b60405180910390f35b610178610383565b604051610185919061119f565b60405180910390f35b6101a860048036038101906101a39190611090565b6103a3565b005b6101c460048036038101906101bf91906111ba565b6103b1565b005b6101e060048036038101906101db91906111e7565b6103be565b6040516101ed9190611115565b60405180910390f35b6101fe6103d0565b60405161020b9190610fc6565b60405180910390f35b61022e60048036038101906102299190611090565b61046b565b60405161023b91906110eb565b60405180910390f35b61025e60048036038101906102599190611349565b610480565b005b610268610530565b6040516102759190611115565b60405180910390f35b610298600480360381019061029391906113d4565b610543565b6040516102a59190611115565b60405180910390f35b60606102b8610557565b60000180546102c690611443565b80601f01602080910402602001604051908101604052809291908181526020018280546102f290611443565b801561033f5780601f106103145761010080835404028352916020019161033f565b820191906000526020600020905b81548152906001019060200180831161032257829003601f168201915b5050505050905090565b6000610356338484610584565b905092915050565b600061036861075d565b905090565b600061037a848484610770565b90509392505050565b600061038d610557565b60020160009054906101000a900460ff16905090565b6103ad8282610867565b5050565b6103bb3382610a0d565b50565b60006103c982610bd7565b9050919050565b60606103da610557565b60010180546103e890611443565b80601f016020809104026020016040519081016040528092919081815260200182805461041490611443565b80156104615780601f1061043657610100808354040283529160200191610461565b820191906000526020600020905b81548152906001019060200180831161044457829003601f168201915b5050505050905090565b6000610478338484610c29565b905092915050565b600061048a610557565b9050600081600001805461049d90611443565b9050146104df576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104d6906114c0565b60405180910390fd5b838160000190816104f0919061168c565b5082816001019081610502919061168c565b5060128160020160006101000a81548160ff021916908360ff16021790555081816004018190555050505050565b600061053a610557565b60040154905090565b600061054f8383610ea6565b905092915050565b6000807f0e539be85842d1c3b5b43263a827c1e07ab5a9c9536bf840ece723e480d80db790508091505090565b60008073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff16036105f4576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105eb906117aa565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610663576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161065a90611816565b60405180910390fd5b8161066c610557565b60060160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9258460405161074a9190611115565b60405180910390a3600190509392505050565b6000610767610557565b60030154905090565b60008061077b610557565b905060008160060160008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905083811015610843576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161083a90611882565b60405180910390fd5b6108508633868403610584565b5061085c868686610c29565b925050509392505050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036108d6576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108cd906118ee565b60405180910390fd5b60006108e0610557565b905080600401548282600301546108f7919061193d565b1115610938576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161092f906119bd565b60405180910390fd5b8181600301600082825461094c919061193d565b92505081905550818160050160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825401925050819055508273ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef84604051610a009190611115565b60405180910390a3505050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610a7c576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a7390611a29565b60405180910390fd5b6000610a86610557565b905060008160050160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905082811015610b11576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b0890611a95565b60405180910390fd5b8281038260050160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550828260030160008282540392505081905550600073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef85604051610bc99190611115565b60405180910390a350505050565b6000610be1610557565b60050160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b60008073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1603610c99576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c9090611b27565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610d08576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610cff90611b93565b60405180910390fd5b6000610d12610557565b905060008160050160008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905083811015610d9d576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d9490611bff565b60405180910390fd5b8381038260050160008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550838260050160008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825401925050819055508473ffffffffffffffffffffffffffffffffffffffff168673ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef86604051610e919190611115565b60405180910390a36001925050509392505050565b6000610eb0610557565b60060160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b600081519050919050565b600082825260208201905092915050565b60005b83811015610f70578082015181840152602081019050610f55565b60008484015250505050565b6000601f19601f8301169050919050565b6000610f9882610f36565b610fa28185610f41565b9350610fb2818560208601610f52565b610fbb81610f7c565b840191505092915050565b60006020820190508181036000830152610fe08184610f8d565b905092915050565b6000604051905090565b600080fd5b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061102782610ffc565b9050919050565b6110378161101c565b811461104257600080fd5b50565b6000813590506110548161102e565b92915050565b6000819050919050565b61106d8161105a565b811461107857600080fd5b50565b60008135905061108a81611064565b92915050565b600080604083850312156110a7576110a6610ff2565b5b60006110b585828601611045565b92505060206110c68582860161107b565b9150509250929050565b60008115159050919050565b6110e5816110d0565b82525050565b600060208201905061110060008301846110dc565b92915050565b61110f8161105a565b82525050565b600060208201905061112a6000830184611106565b92915050565b60008060006060848603121561114957611148610ff2565b5b600061115786828701611045565b935050602061116886828701611045565b92505060406111798682870161107b565b9150509250925092565b600060ff82169050919050565b61119981611183565b82525050565b60006020820190506111b46000830184611190565b92915050565b6000602082840312156111d0576111cf610ff2565b5b60006111de8482850161107b565b91505092915050565b6000602082840312156111fd576111fc610ff2565b5b600061120b84828501611045565b91505092915050565b600080fd5b600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b61125682610f7c565b810181811067ffffffffffffffff821117156112755761127461121e565b5b80604052505050565b6000611288610fe8565b9050611294828261124d565b919050565b600067ffffffffffffffff8211156112b4576112b361121e565b5b6112bd82610f7c565b9050602081019050919050565b82818337600083830152505050565b60006112ec6112e784611299565b61127e565b90508281526020810184848401111561130857611307611219565b5b6113138482856112ca565b509392505050565b600082601f8301126113305761132f611214565b5b81356113408482602086016112d9565b91505092915050565b60008060006060848603121561136257611361610ff2565b5b600084013567ffffffffffffffff8111156113805761137f610ff7565b5b61138c8682870161131b565b935050602084013567ffffffffffffffff8111156113ad576113ac610ff7565b5b6113b98682870161131b565b92505060406113ca8682870161107b565b9150509250925092565b600080604083850312156113eb576113ea610ff2565b5b60006113f985828601611045565b925050602061140a85828601611045565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000600282049050600182168061145b57607f821691505b60208210810361146e5761146d611414565b5b50919050565b7f416c726561647920696e697469616c697a656400000000000000000000000000600082015250565b60006114aa601383610f41565b91506114b582611474565b602082019050919050565b600060208201905081810360008301526114d98161149d565b9050919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b6000600883026115427fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82611505565b61154c8683611505565b95508019841693508086168417925050509392505050565b6000819050919050565b600061158961158461157f8461105a565b611564565b61105a565b9050919050565b6000819050919050565b6115a38361156e565b6115b76115af82611590565b848454611512565b825550505050565b600090565b6115cc6115bf565b6115d781848461159a565b505050565b5b818110156115fb576115f06000826115c4565b6001810190506115dd565b5050565b601f82111561164057611611816114e0565b61161a846114f5565b81016020851015611629578190505b61163d611635856114f5565b8301826115dc565b50505b505050565b600082821c905092915050565b600061166360001984600802611645565b1980831691505092915050565b600061167c8383611652565b9150826002028217905092915050565b61169582610f36565b67ffffffffffffffff8111156116ae576116ad61121e565b5b6116b88254611443565b6116c38282856115ff565b600060209050601f8311600181146116f657600084156116e4578287015190505b6116ee8582611670565b865550611756565b601f198416611704866114e0565b60005b8281101561172c57848901518255600182019150602085019450602081019050611707565b868310156117495784890151611745601f891682611652565b8355505b6001600288020188555050505b505050505050565b7f45524332303a20617070726f76652066726f6d207a65726f2061646472657373600082015250565b6000611794602083610f41565b915061179f8261175e565b602082019050919050565b600060208201905081810360008301526117c381611787565b9050919050565b7f45524332303a20617070726f766520746f207a65726f20616464726573730000600082015250565b6000611800601e83610f41565b915061180b826117ca565b602082019050919050565b6000602082019050818103600083015261182f816117f3565b9050919050565b7f45524332303a20696e73756666696369656e7420616c6c6f77616e6365000000600082015250565b600061186c601d83610f41565b915061187782611836565b602082019050919050565b6000602082019050818103600083015261189b8161185f565b9050919050565b7f45524332303a206d696e7420746f207a65726f20616464726573730000000000600082015250565b60006118d8601b83610f41565b91506118e3826118a2565b602082019050919050565b60006020820190508181036000830152611907816118cb565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006119488261105a565b91506119538361105a565b925082820190508082111561196b5761196a61190e565b5b92915050565b7f45524332303a2065786365656473206d617820737570706c7900000000000000600082015250565b60006119a7601983610f41565b91506119b282611971565b602082019050919050565b600060208201905081810360008301526119d68161199a565b9050919050565b7f45524332303a206275726e2066726f6d207a65726f2061646472657373000000600082015250565b6000611a13601d83610f41565b9150611a1e826119dd565b602082019050919050565b60006020820190508181036000830152611a4281611a06565b9050919050565b7f45524332303a206275726e20657863656564732062616c616e63650000000000600082015250565b6000611a7f601b83610f41565b9150611a8a82611a49565b602082019050919050565b60006020820190508181036000830152611aae81611a72565b9050919050565b7f45524332303a207472616e736665722066726f6d207a65726f2061646472657360008201527f7300000000000000000000000000000000000000000000000000000000000000602082015250565b6000611b11602183610f41565b9150611b1c82611ab5565b604082019050919050565b60006020820190508181036000830152611b4081611b04565b9050919050565b7f45524332303a207472616e7366657220746f207a65726f206164647265737300600082015250565b6000611b7d601f83610f41565b9150611b8882611b47565b602082019050919050565b60006020820190508181036000830152611bac81611b70565b9050919050565b7f45524332303a20696e73756666696369656e742062616c616e63650000000000600082015250565b6000611be9601b83610f41565b9150611bf482611bb3565b602082019050919050565b60006020820190508181036000830152611c1881611bdc565b905091905056fea2646970667358221220ecf6d847b94445555124030954b441e6b0256576911f7b9719a8de73144b4b5864736f6c634300081c0033";

type ERC20FacetConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ERC20FacetConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ERC20Facet__factory extends ContractFactory {
  constructor(...args: ERC20FacetConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ERC20Facet> {
    return super.deploy(overrides || {}) as Promise<ERC20Facet>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): ERC20Facet {
    return super.attach(address) as ERC20Facet;
  }
  override connect(signer: Signer): ERC20Facet__factory {
    return super.connect(signer) as ERC20Facet__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ERC20FacetInterface {
    return new utils.Interface(_abi) as ERC20FacetInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ERC20Facet {
    return new Contract(address, _abi, signerOrProvider) as ERC20Facet;
  }
}
