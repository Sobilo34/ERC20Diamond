/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../common";
import type {
  DiamondProxyContract,
  DiamondProxyContractInterface,
} from "../DiamondProxyContract";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes4[]",
        name: "selectors",
        type: "bytes4[]",
      },
      {
        indexed: false,
        internalType: "address",
        name: "facet",
        type: "address",
      },
    ],
    name: "DiamondCut",
    type: "event",
  },
  {
    stateMutability: "payable",
    type: "fallback",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "facet",
        type: "address",
      },
      {
        internalType: "bytes4[]",
        name: "selectors",
        type: "bytes4[]",
      },
    ],
    name: "addFacet",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "selector",
        type: "bytes4",
      },
    ],
    name: "facetAddress",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "facetSelectors",
    outputs: [
      {
        internalType: "bytes4[]",
        name: "",
        type: "bytes4[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
] as const;

const _bytecode =
  "0x6080604052348015600f57600080fd5b506028677698ed00290085ce60c01b602c60201b60201c565b602f565b50565b610e3b8061003e6000396000f3fe6080604052600436106100385760003560e01c80635547dad614610246578063cdffacc61461026f578063e0c1c786146102ac5761003f565b3661003f57005b6100536774f98394bc390bc860c01b6102d7565b610067677c77be42b88d5ff060c01b6102d7565b61007b6755006d7df3595d3160c01b6102d7565b60006100856102da565b905061009b678de19e6800d730c360c01b6102d7565b6100af67690c1fac6b8d97cb60c01b6102d7565b600081600001600080357fffffffff00000000000000000000000000000000000000000000000000000000167bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19167bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050610161675c825e5cad5e667260c01b6102d7565b610175672683b811752486f660c01b6102d7565b61018967c535fd05b6dec67b60c01b6102d7565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036101f8576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016101ef90610964565b60405180910390fd5b61020c677a659dcb701809d860c01b6102d7565b61022067f21c3862d87f61ae60c01b6102d7565b3660008037600080366000845af43d6000803e8060008114610241573d6000f35b3d6000fd5b34801561025257600080fd5b5061026d60048036038101906102689190610ba7565b610358565b005b34801561027b57600080fd5b5061029660048036038101906102919190610c03565b610762565b6040516102a39190610c3f565b60405180910390f35b3480156102b857600080fd5b506102c1610825565b6040516102ce9190610d18565b60405180910390f35b50565b60006102f067d82f14493b5ac4be60c01b610904565b610304675ad3bf25f0611c9560c01b610904565b610318674dfd74b53af5d4e460c01b610904565b60007f298441fe9def864df48883d27c462b8dcef6bbb9cf8d83c2580b381b1a70d8a890506103516761c511bb4a2a428e60c01b610904565b8091505090565b61036c671b9a8754f5eb44ce60c01b6102d7565b61038067fa3f9cc434ad79d460c01b6102d7565b61039467adfc11322d941b6c60c01b6102d7565b600061039e6102da565b90506103b4671baeb7d80b0943d560c01b6102d7565b6103c867f6a561a3d7924ea260c01b6102d7565b60005b82518110156106fb576103e8670f3023e4eaccb53760c01b6102d7565b6103fc677149212e57c9033a60c01b6102d7565b600083828151811061041157610410610d3a565b5b6020026020010151905061042f67be2fe0ab4afeaab260c01b6102d7565b61044367063690dfc0fd5ebe60c01b6102d7565b61045767c516e218195022a460c01b6102d7565b600073ffffffffffffffffffffffffffffffffffffffff16836000016000837bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19167bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161461053c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161053390610db5565b60405180910390fd5b610550677c8c82e8c6efa37b60c01b6102d7565b61056467944b1560303257dc60c01b6102d7565b60405180604001604052808673ffffffffffffffffffffffffffffffffffffffff16815260200184600101805490506bffffffffffffffffffffffff16815250836000016000837bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19167bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916815260200190815260200160002060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060208201518160000160146101000a8154816bffffffffffffffffffffffff02191690836bffffffffffffffffffffffff16021790555090505061068c677bc1e34d43ce2f7160c01b6102d7565b6106a067a29b3f05274ac5f160c01b6102d7565b826001018190806001815401808255809150506001900390600052602060002090600891828204019190066004029091909190916101000a81548163ffffffff021916908360e01c02179055505080806001019150506103cb565b5061071067c8285d6e54d7e10660c01b6102d7565b61072467b1441799264423e360c01b6102d7565b7fea2ef9cf7273efc5d3fe21477cb1fcd7c2c79083512ba63cc855ff70e814f2288284604051610755929190610dd5565b60405180910390a1505050565b6000610778671e815a984a22e1f560c01b6102d7565b61078c671262058ded3f22a560c01b6102d7565b6107a06730b5755e88000ca760c01b6102d7565b6107a86102da565b6000016000837bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19167bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b606061083b67f2486e0c2f7bd1fe60c01b6102d7565b61084f67021d77915cdedd5f60c01b6102d7565b61086367a9e00b9e7435d27260c01b6102d7565b61086b6102da565b6001018054806020026020016040519081016040528092919081815260200182805480156108fa57602002820191906000526020600020906000905b82829054906101000a900460e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916815260200190600401906020826003010492830192600103820291508084116108a75790505b5050505050905090565b50565b600082825260208201905092915050565b7f46756e6374696f6e20646f6573206e6f74206578697374000000000000000000600082015250565b600061094e601783610907565b915061095982610918565b602082019050919050565b6000602082019050818103600083015261097d81610941565b9050919050565b6000604051905090565b600080fd5b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006109c382610998565b9050919050565b6109d3816109b8565b81146109de57600080fd5b50565b6000813590506109f0816109ca565b92915050565b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b610a44826109fb565b810181811067ffffffffffffffff82111715610a6357610a62610a0c565b5b80604052505050565b6000610a76610984565b9050610a828282610a3b565b919050565b600067ffffffffffffffff821115610aa257610aa1610a0c565b5b602082029050602081019050919050565b600080fd5b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b610aed81610ab8565b8114610af857600080fd5b50565b600081359050610b0a81610ae4565b92915050565b6000610b23610b1e84610a87565b610a6c565b90508083825260208201905060208402830185811115610b4657610b45610ab3565b5b835b81811015610b6f5780610b5b8882610afb565b845260208401935050602081019050610b48565b5050509392505050565b600082601f830112610b8e57610b8d6109f6565b5b8135610b9e848260208601610b10565b91505092915050565b60008060408385031215610bbe57610bbd61098e565b5b6000610bcc858286016109e1565b925050602083013567ffffffffffffffff811115610bed57610bec610993565b5b610bf985828601610b79565b9150509250929050565b600060208284031215610c1957610c1861098e565b5b6000610c2784828501610afb565b91505092915050565b610c39816109b8565b82525050565b6000602082019050610c546000830184610c30565b92915050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b610c8f81610ab8565b82525050565b6000610ca18383610c86565b60208301905092915050565b6000602082019050919050565b6000610cc582610c5a565b610ccf8185610c65565b9350610cda83610c76565b8060005b83811015610d0b578151610cf28882610c95565b9750610cfd83610cad565b925050600181019050610cde565b5085935050505092915050565b60006020820190508181036000830152610d328184610cba565b905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f53656c6563746f7220616c726561647920657869737473000000000000000000600082015250565b6000610d9f601783610907565b9150610daa82610d69565b602082019050919050565b60006020820190508181036000830152610dce81610d92565b9050919050565b60006040820190508181036000830152610def8185610cba565b9050610dfe6020830184610c30565b939250505056fea2646970667358221220c5bccf6ec9353ce55e821dbda1d6555defe7d978ba2a5c4bea2e75b0dbef5fa864736f6c634300081c0033";

type DiamondProxyContractConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: DiamondProxyContractConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class DiamondProxyContract__factory extends ContractFactory {
  constructor(...args: DiamondProxyContractConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<DiamondProxyContract> {
    return super.deploy(overrides || {}) as Promise<DiamondProxyContract>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): DiamondProxyContract {
    return super.attach(address) as DiamondProxyContract;
  }
  override connect(signer: Signer): DiamondProxyContract__factory {
    return super.connect(signer) as DiamondProxyContract__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): DiamondProxyContractInterface {
    return new utils.Interface(_abi) as DiamondProxyContractInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): DiamondProxyContract {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as DiamondProxyContract;
  }
}
